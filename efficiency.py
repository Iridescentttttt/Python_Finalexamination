from manimlib import *

class text(Scene):
    def construct(self):
        word = Text(
            text="旦  旧  旮  旯  旭  旬  早  旨  旫  旪  旱  旷  时  旸  昅\n"
                 "日  曳  禠  暶  昭  昙  旺  昆  晖  暖  明  昏  晓  期  朔\n"
                 "心  想  思  念  忘  恩  感  怀  快  慢  慰  情  性  怄  怦\n"
                 "坝  坍  坊  均  堤  垒  圳  偕  址  硕  基  堂  坡  炕  坩\n"
                 "古  占  合  台  吉  吕  叶  由  叫  哭  吗  只  另  吏  足\n"
                 "亿  仁  什  仃  仆  仉  仇  化  及  丘  价  杰  贷  敦  仓\n"
                 "石  破  础  研  硕  砰  砂  烦  硫  硬  磅  砐  砙  砞  矴\n"
                 "大  天  夫  太  夬  夭  失  奏  矢  夸  夺  巫  奄  奈  尖\n"
                 "木  本  术  末  禾  东  南  西  北  叶  鱼  革  果  柿  桌\n"
                 "柚  椅  橙  报  访  辅  音  伞  森  风  棉  朵  李  杏  杉\n"
                 "棽  榇  橝  棌  橒  檦  檇  橅  檫  檭  鼐  犇  猋  骉  虫\n",
            font="msjh",
            font_size=28,
            color=WHITE
        )
        word.to_edge(UP)
        self.play(Write(word), run_time=2.5)
        self.wait(3)
        self.remove(word)
        # 计算一个汉字需要的字母数
        e1 = Text(
            text="26 × 26 = 676\n",
            font="msjh",
            font_size=28,
            color=WHITE
        )
        e2 = Text(
            text="26 × 26 × 26 = 17576\n",
            font="msjh",
            font_size=28,
            color=WHITE
        )
        e3 = Text(text=">6700\n", font="msjh", font_size=28, color=RED_B)
        e4 = Text(text="我     你     他", font="msjh", font_size=28, color=WHITE)
        e5 = Text(text="譗      嬖      孳", font="msjh", font_size=28, color=WHITE)
        e44 = Text(text="a       b       c", font="msjh", font_size=28, color=BLUE)
        e55 = Text(text="whg    wjk    suh", font="msjh", font_size=28, color=BLUE)
        e1.to_edge(UP, buff=1.5)
        e2.next_to(e1, DOWN, buff=0.5)
        e3.next_to(e2, RIGHT, buff=0.5)
        e4.to_edge(LEFT, buff=2.8)
        e44.next_to(e4, DOWN, buff=0.5)
        e5.next_to(e4, RIGHT, buff=2)
        e55.next_to(e5, DOWN, buff=0.5)
        self.wait(2)
        self.play(Write(e1), run_time=2)
        self.play(Write(e2), run_time=1)
        self.play(FadeIn(e3))
        self.wait(1)
        self.play(FadeIn(e4), FadeIn(e5))
        self.wait(2)
        self.play(Write(e44))
        self.wait(1)
        self.play(Write(e55))
        self.wait(2)
        self.remove(e1, e2, e3, e44, e4, e5, e55)
#计算平均编码长度
        f = SingleStringTex(r"p_1,p_2,p_3,...,p_{6700}", font_size=40, color=BLUE_B)
        f1 = SingleStringTex(r"L_1,L_2,L_3,...,L_{6700}", font_size=40, color=BLUE_B)
        f2 = SingleStringTex(r"p_1\cdot L_1+p_2\cdot L_2+p_3\cdot L_3+...+p_{6700}\cdot L_{6700}", font_size=38, color=BLUE_B)
        f22 = SingleStringTex(r"p_1\cdot L_1+p_2\cdot L_2+p_3\cdot L_3+...+p_{6700}\cdot L_{6700}", font_size=38, color=BLUE_B)
        f.to_edge(UP, buff=2)
        f1.next_to(f, DOWN, buff=1)
        f22.move_to(f2)
        self.play(Write(f), run_time=1)
        self.wait(2)
        self.play(Write(f1), run_time=1)
        self.wait(3)
        self.play(Transform(f1, f2), Transform(f, f22))
        self.wait(2.5)
        self.remove(f, f1, f2)
#香农第一定理
        title = Text("Shannon first theorem", slant=ITALIC, font_size=28, color=PURPLE_B)
        title.to_edge(UP, buff=1)
        self.add(title)
        self.wait(1.5)
        shan = Text(
            text="对于一个信息，任何编码的长度都不小于它的信息熵。", font="ITALIC", font_size=28, color=WHITE
        )
        shan.next_to(title, DOWN, buff=1)
        self.play(Write(shan))
        self.wait(2.5)
        self.play(FadeOut(shan))
        self.remove(title)
#信息熵
        self.wait(2)
        g1 = Circle(radius=0.35)
        g1.set_fill(color=BLUE_D, opacity=1)
        g1.to_edge(UP, buff=1)
        g1.to_edge(LEFT, buff=2)
        g2 = Circle(radius=0.35)
        g2.set_fill(color=BLUE_D, opacity=1)
        g2.to_edge(UP, buff=1)
        g2.to_edge(LEFT, buff=3.5)
        g3 = Circle(radius=0.35)
        g3.set_fill(color=BLUE_D, opacity=1)
        g3.to_edge(UP, buff=1)
        g3.to_edge(LEFT, buff=5)
        g4 = Circle(radius=0.35)
        g4.set_fill(color=BLUE_D, opacity=1)
        g4.to_edge(UP, buff=1)
        g4.to_edge(LEFT, buff=6.5)
        g5 = Circle(radius=0.35)
        g5.set_fill(color=BLUE_D, opacity=1)
        g5.to_edge(UP, buff=2.5)
        g5.to_edge(LEFT, buff=2)
        g6 = Circle(radius=0.35)
        g6.set_fill(color=BLUE_D, opacity=1)
        g6.to_edge(UP, buff=2.5)
        g6.to_edge(LEFT, buff=3.5)
        g7 = Circle(radius=0.35)
        g7.set_fill(color=BLUE_D, opacity=1)
        g7.to_edge(UP, buff=2.5)
        g7.to_edge(LEFT, buff=5)
        g8 = Circle(radius=0.35)
        g8.set_fill(color=BLUE_D, opacity=1)
        g8.to_edge(UP, buff=2.5)
        g8.to_edge(LEFT, buff=6.5)
        num1 = Text(text="1", font="ITALIC", font_size=25, color=WHITE)
        num1.move_to(g1)
        num2 = Text(text="2", font="ITALIC", font_size=25, color=WHITE)
        num2.move_to(g2)
        num3 = Text(text="3", font="ITALIC", font_size=25, color=WHITE)
        num3.move_to(g3)
        num4 = Text(text="4", font="ITALIC", font_size=25, color=WHITE)
        num4.move_to(g4)
        num5 = Text(text="5", font="ITALIC", font_size=25, color=WHITE)
        num5.move_to(g5)
        num6 = Text(text="6", font="ITALIC", font_size=25, color=WHITE)
        num6.move_to(g6)
        num7 = Text(text="7", font="ITALIC", font_size=25, color=WHITE)
        num7.move_to(g7)
        num8 = Text(text="8", font="ITALIC", font_size=25, color=WHITE)
        num8.move_to(g8)
        g9 = Circle(radius=0.35)  # 抽取的球
        g9.set_fill(color=ORANGE, opacity=1)
        g9.to_edge(LEFT, buff=8)
        g9.to_edge(UP, buff=1.75)
        mark2 = Text(text="?", font="ITALIC", font_size=25, color=WHITE)
        mark2.move_to(g9)
        # 先假设取球，概率相等
        gt1 = Text(text="p=1/8", font="ITALIC", font_size=25, color=WHITE)
        gt1.to_edge(LEFT, buff=10)
        gt1.to_edge(UP, buff=1.8)
        gtt1 = Text(text="1 : 1 - 4 ?", font="ITALIC", font_size=25, color=WHITE)
        gtt2 = Text(text="2 : 5 - 6 ?", font="ITALIC", font_size=25, color=WHITE)
        gtt3 = Text(text="3 : 6 ?", font="ITALIC", font_size=25, color=WHITE)
        gtt1.next_to(gt1, DOWN)
        gtt2.next_to(gtt1, DOWN)
        gtt3.next_to(gtt2, DOWN)
        gtt3.shift(LEFT * 0.4)
        self.play(ShowCreation(g1), Write(num1), ShowCreation(g2), Write(num2),
                  ShowCreation(g3), Write(num3), ShowCreation(g4), Write(num4),
                  ShowCreation(g5), Write(num5), ShowCreation(g6), Write(num6),
                  ShowCreation(g7), Write(num7), ShowCreation(g8), Write(num8), run_time=1)
        self.wait(2.5)
        self.play(FadeIn(g9), FadeIn(mark2))
        self.play(Rotate(mark2, 2 * PI), run_time=0.8)
        self.wait(1.5)
        self.play(Write(gt1))
        self.wait()
        self.play(FadeIn(gtt1))
        self.play(FadeIn(gtt2))
        self.play(FadeIn(gtt3))
        self.wait(0.5)
        self.remove(gt1, mark2, g9, gtt1, gtt2, gtt3)
        self.wait(4.5)
        # 概率不同
        # 1,2赢的概率大
        g11 = Circle(radius=0.35)
        g11.set_fill(color=BLUE_D, opacity=1)
        g11.to_edge(LEFT, buff=2)
        g22 = Circle(radius=0.35)
        g22.set_fill(color=BLUE_D, opacity=1)
        g22.to_edge(LEFT, buff=3)
        g33 = Circle(radius=0.35)
        g33.set_fill(color=BLUE_D, opacity=1)
        g33.to_edge(UP, buff=2.7)
        g33.to_edge(LEFT, buff=7)
        g44 = Circle(radius=0.35)
        g44.set_fill(color=BLUE_D, opacity=1)
        g44.to_edge(UP, buff=2.7)
        g44.to_edge(LEFT, buff=8)
        g55 = Circle(radius=0.35)
        g55.set_fill(color=BLUE_D, opacity=1)
        g55.to_edge(LEFT, buff=7)
        g66 = Circle(radius=0.35)
        g66.set_fill(color=BLUE_D, opacity=1)
        g66.to_edge(LEFT, buff=8)
        g77 = Circle(radius=0.35)
        g77.set_fill(color=BLUE_D, opacity=1)
        g77.to_edge(UP, buff=4.6)
        g77.to_edge(LEFT, buff=7)
        g88 = Circle(radius=0.35)
        g88.set_fill(color=BLUE_D, opacity=1)
        g88.to_edge(UP, buff=4.6)
        g88.to_edge(LEFT, buff=8)
        num11 = Text(text="1", font="ITALIC", font_size=25, color=WHITE)
        num11.move_to(g11)
        num22 = Text(text="2", font="ITALIC", font_size=25, color=WHITE)
        num22.move_to(g22)
        num33 = Text(text="3", font="ITALIC", font_size=25, color=WHITE)
        num33.move_to(g33)
        num44 = Text(text="4", font="ITALIC", font_size=25, color=WHITE)
        num44.move_to(g44)
        num55 = Text(text="5", font="ITALIC", font_size=25, color=WHITE)
        num55.move_to(g55)
        num66 = Text(text="6", font="ITALIC", font_size=25, color=WHITE)
        num66.move_to(g66)
        num77 = Text(text="7", font="ITALIC", font_size=25, color=WHITE)
        num77.move_to(g77)
        num88 = Text(text="8", font="ITALIC", font_size=25, color=WHITE)
        num88.move_to(g88)
        self.play(Transform(g1, g11), Transform(num1, num11), Transform(g2, g22), Transform(num2, num22),
                  Transform(g3, g33), Transform(num3, num33), Transform(g4, g44), Transform(num4, num44),
                  Transform(g5, g55), Transform(num5, num55), Transform(g6, g66), Transform(num6, num66),
                  Transform(g7, g77), Transform(num7, num77), Transform(g8, g88), Transform(num8, num88))
        self.wait(1)
        self.remove(g3, g4, g5, g6, g7, g8, num3, num4, num5, num6, num7, num8)
        self.wait()
        # 随机选取一个猜,假设1猜中了
        g111 = Circle(radius=1)
        g111.set_fill(color=BLUE_D, opacity=1)
        num111 = Text(text="1", font="ITALIC", font_size=35, color=WHITE)
        num111.move_to(g111)
        g222 = Circle(radius=0.35)
        g222.set_fill(color=BLUE_D, opacity=1)
        g222.move_to(LEFT * 10)
        num222 = Text(text="2", font="ITALIC", font_size=25, color=WHITE)
        num222.move_to(g222)
        shannon = SingleStringTex(r"H=-p_1\cdot \log p_1-p_2\cdot \log p_2-...-p_{8}\cdot \log p_{8}", font_size=35, color=WHITE)
        self.play(ReplacementTransform(g1, g111), ReplacementTransform(num1, num111))
        self.wait(1)
        self.play(Transform(g2, g222), Transform(num2, num222), run_time=0.5)
        self.wait(3)
        self.remove(num111, g111, g1, g2, g22, num2, num222)
        self.wait(5)
        self.play(Write(shannon))
        self.wait(1.5)
        self.remove(shannon)
        self.wait()

        # 估算敲击键盘次数+组词
        ff1 = Text(text="log 26 = 4.7", font="ITALIC", font_size=25, color=WHITE)
        ff2 = Text(text="10 / 4.7 = 2.1", font="ITALIC", font_size=25, color=WHITE)
        ff1.to_edge(UP, buff=1.8)
        ff1.to_edge(LEFT, buff=2.5)
        ff2.next_to(ff1, RIGHT, buff=2)
        ff31 = Text(text="真假、好坏、快慢、开关、\n", font="ITALIC", font_size=20, color=WHITE)
        ff32 = Text(text="反正、早晚、安危、死活、\n", font="ITALIC", font_size=20, color=WHITE)
        ff33 = Text(text="始终、多少、大小、方圆、\n", font="ITALIC", font_size=20, color=WHITE)
        ff34 = Text(text="黑白、前后、左右、上下、\n", font="ITALIC", font_size=20, color=WHITE)
        ff35 = Text(text="远近、深浅、东西、南北、\n", font="ITALIC", font_size=20, color=WHITE)
        ff36 = Text(text="春秋、冬夏、风云、雨雪\n", font="ITALIC", font_size=20, color=WHITE)

        ff4 = Text(text="8 / 4.7 = 1.7", font="ITALIC", font_size=25, color=YELLOW)
        ff5 = Text(text="6 / 4.7 = 1.3", font="ITALIC", font_size=25, color=YELLOW)
        ff31.to_edge(LEFT, buff=1)
        ff31.to_edge(UP, buff=3)
        ff32.next_to(ff31, DOWN)
        ff33.next_to(ff32, DOWN)
        ff34.next_to(ff33, DOWN)
        ff35.next_to(ff34, DOWN)
        ff36.next_to(ff35, DOWN)
        ff4.to_edge(RIGHT, buff=4)
        ff5.next_to(ff4, DOWN, buff=0.3)
        self.wait(5)
        self.play(Write(ff1))
        self.wait(2.5)
        self.play(Write(ff2))
        self.wait(1)
        self.play(Write(ff31), run_time=0.3)
        self.play(Write(ff32), run_time=0.3)
        self.play(Write(ff33), run_time=0.3)
        self.play(Write(ff34), run_time=0.3)
        self.play(Write(ff35), run_time=0.3)
        self.play(Write(ff36), run_time=0.3)
        self.wait(1)
        self.play(Write(ff4))
        self.wait(5.5)
        self.play(Write(ff5))
        self.wait()
        self.remove(ff31, ff32, ff33, ff34, ff35, ff36, ff1, ff2, ff4, ff5)
#统计模型
        self.wait(3)
        sen = Text(text="1:美联储主席本伯南克昨天告诉媒体7000亿美元的救助资金\n将借给上百家银行、"
                        "保险公司和汽车公司。", font="ITALIC", font_size=18, color=WHITE)
        sen1 = Text(text="2:本伯南美联储主席昨天7000亿美元的救助资金告诉媒体将\n借给银行、保险公"
                         "司和汽车公司上百家。", font="ITALIC", font_size=18, color=WHITE)
        sen2 = Text(text="3:联主美储席本伯诉体南将借天的救克告媒昨助资金70元亿\n00美给上百百家银保行、"
                         "汽车险公司公司和。", font="ITALIC", font_size=18, color=WHITE)
        sen.to_edge(UP, 2)
        sen.to_edge(LEFT, buff=1)
        sen1.next_to(sen, DOWN, buff=1)
        sen1.to_edge(LEFT, buff=1)
        sen2.next_to(sen1, DOWN, buff=1)
        sen2.to_edge(LEFT, buff=1)
        self.play(Write(sen))
        self.wait(1)
        self.play(Write(sen1))
        self.wait(1.5)
        self.play(Write(sen2))
        self.wait(6)
        sn = SingleStringTex(r"10^{-20}", font_size=38, color=BLUE)
        sn1 = SingleStringTex(r"10^{-25}", font_size=38, color=BLUE)
        sn2 = SingleStringTex(r"10^{-70}", font_size=38, color=BLUE)
        sn.next_to(sen, RIGHT, buff=1)
        sn1.next_to(sen1, RIGHT, buff=1)
        sn2.next_to(sen2, RIGHT, buff=1)
        self.play(FadeIn(sn), FadeIn(sn1), FadeIn(sn2))
        self.wait(6)
        self.remove(sen, sen1, sen2, sn, sn1, sn2)
#模型公式
        fun1 = SingleStringTex(r"S=w_1,w_2,...,w_n", font_size=40, color=BLUE_A)
        fun2 = SingleStringTex(r"P(S)=P(w_1,w_2,...,w_n)", font_size=40, color=BLUE_A)
        fun3 = SingleStringTex(r"P(w_1,w_2,...,w_n)=P(w_1)\cdot P(w_2|w_1)\cdot "
                               r"P(w_3|w_1,w_2)... P(w_n|w_1,w_2,...,w_{n-1})", font_size=40, color=BLUE_B)
        fun4 = SingleStringTex(r"P(S)=P(w_1)\cdot P(w_2|w_1)\cdot P(w_3|w_2)... P(w_n|w_{n-1})", font_size=40,
                               color=BLUE_B)
        fun5 = SingleStringTex(r"P(w_i|w_{i-1})", font_size=40, color=BLUE_B)
        fun5a = SingleStringTex(r"=\frac{P(w_{i-1},w_i)}{P(w_{i-1})}", font_size=40, color=BLUE_B)
        fun5aa = SingleStringTex(r"=\frac{\#(w_{i-1},w_i)}{\#w_{i-1}}", font_size=40, color=ORANGE)
        fun6 = SingleStringTex(r"\#(w_{i-1},w_i)", font_size=40, color=YELLOW_B)
        fun7 = SingleStringTex(r"\#(w_{i-1})", font_size=40, color=YELLOW_B)
        fun8 = SingleStringTex(r"\#", font_size=40, color=YELLOW_B)
        fun8a = SingleStringTex(r"\#", font_size=40, color=YELLOW_B)
        fun9 = Text(text="=——————            =——————", font="ITALIC", font_size=20, color=YELLOW_B)
        fun9_1 = SingleStringTex(r"f(w_{i-1},w_i)", font_size=40, color=YELLOW_B)
        fun9_2 = SingleStringTex(r"f(w_{i-1})", font_size=40, color=YELLOW_B)
        fun55 = SingleStringTex(r"\#(w_{i-1},w_i)", font_size=40, color=YELLOW_B)
        fun66 = SingleStringTex(r"\#(w_{i-1})", font_size=40, color=YELLOW_B)
        fun77 = SingleStringTex(r"\#", font_size=40, color=YELLOW_B)
        fun777 = SingleStringTex(r"\#", font_size=40, color=YELLOW_B)
        fun10_1 = SingleStringTex(r"P(w_{i-1},w_i)", font_size=40, color=ORANGE)
        fun10_2 = SingleStringTex(r"P(w_{i-1})", font_size=40, color=ORANGE)

        fun1.to_edge(UP, buff=1)
        fun2.next_to(fun1, DOWN)
        fun3.next_to(fun2, DOWN)
        fun4.move_to(fun3)
        fun5a.next_to(fun4, DOWN)
        fun5.next_to(fun5a, LEFT)
        fun5aa.next_to(fun5a, RIGHT)
        fun6.next_to(fun5, DOWN)
        fun6.move_to(LEFT * 3)
        fun7.next_to(fun6, RIGHT, buff=1.5)
        fun8.next_to(fun7, RIGHT, buff=2)
        fun8a.move_to(fun8)
        fun9.next_to(fun6, DOWN, buff=0.38)
        fun9.to_edge(LEFT, buff=4.7)
        fun9_1.next_to(fun9, LEFT)
        fun9_2.move_to(fun9)
        fun55.move_to(fun9)
        fun55.move_to(LEFT * 1)
        fun55.shift(DOWN * 0.3)
        fun66.move_to(fun55)
        fun66.shift(RIGHT * 4)
        fun77.move_to(fun55)
        fun77.move_to(DOWN * 0.9)
        fun77.to_edge(LEFT, buff=6)
        fun777.move_to(fun77)
        fun777.shift(RIGHT * 4)
        fun10_1.move_to(fun9_1)
        fun10_2.move_to(fun9_2)
        self.wait(2.5)
        self.play(FadeIn(fun1))
        self.wait(1)
        self.play(FadeIn(fun2))
        self.wait(1)
        self.play(Write(fun3), run_time=10)
        self.wait(15)
        self.play(ReplacementTransform(fun3, fun4))
        self.wait(1)
        self.play(FadeIn(fun5))
        self.play(Write(fun5a))
        self.wait(2)
        self.play(Write(fun6))
        self.wait(1)
        self.play(Write(fun7))
        self.wait(1)
        self.play(Write(fun8))
        self.wait(1.5)
        self.play(FadeIn(fun9), FadeIn(fun9_1), FadeIn(fun9_2))
        self.wait(1)
        self.play(ReplacementTransform(fun6, fun55), ReplacementTransform(fun7, fun66),
                  ReplacementTransform(fun8, fun77), ReplacementTransform(fun8a, fun777))
        self.wait(2)
        self.play(Transform(fun9_1, fun10_1), Transform(fun9_2, fun10_2))
        self.wait(3)
        self.play(Write(fun5aa))
        self.wait(1)
        len = Text(text="汉语全拼平均长度：2.98", font="ITALIC", font_size=20, color=BLUE_B)
        len.next_to(fun9, DOWN, buff=1.2)
        len.to_edge(LEFT, buff=5)
        self.play(FadeIn(len))
        self.wait(5)
        self.remove(fun1, fun2, fun3, fun4, fun5, fun5a, fun6, fun7,
                    fun8, fun9, fun8a, fun55, fun66, fun77, fun777, len, fun5aa, fun9_1, fun9_2, fun10_1, fun10_2)
        self.wait()

#语言模型，地心说模型
        self.wait(5)
        poem = Text(
            text="    春晓\n"
                 "春眠不觉晓,\n"
                 "处处闻啼鸟,\n"
                 "夜来风雨声,\n"
                 "花落知多少?",
            font="ITALIC",
            font_size=18,
            color=BLUE_A
        )
        poem.to_edge(LEFT, buff=1)
        self.play(FadeIn(poem))
        mark = Text(text="?\n", weight=BOLD, font="ITALIC", font_size=125, color=BLUE_C)
        self.play(FadeIn(mark))
        mark.move_to(poem)
        self.wait(2)
        self.play(Rotate(mark, 2 * PI, run_time=2))
        self.wait(3)
        zhi = Text(text="\"zhi\"", font="ITALIC", font_size=20, color=BLUE_A)
        z1 = Text(text="只", font="ITALIC", font_size=20, color=WHITE)
        z2 = Text(text="之", font="ITALIC", font_size=20, color=WHITE)
        z3 = Text(text="至", font="ITALIC", font_size=20, color=WHITE)
        z4 = Text(text="支", font="ITALIC", font_size=20, color=WHITE)
        z5 = Text(text="指", font="ITALIC", font_size=20, color=WHITE)
        z6 = Text(text="纸", font="ITALIC", font_size=20, color=WHITE)
        z7 = Text(text="知", font="ITALIC", font_size=20, color=WHITE)
        z8 = Text(text="...", font="ITALIC", font_size=20, color=WHITE)
        zhi.to_edge(UP, buff=1.5)
        zhi.shift(LEFT * 0.8)
        z1.next_to(zhi, UR)
        z2.next_to(zhi, RIGHT, buff=0.5)
        z3.next_to(zhi, DR)
        z4.next_to(zhi, DOWN, buff=0.5)
        z5.next_to(zhi, DL)
        z6.next_to(zhi, LEFT, buff=0.5)
        z7.next_to(zhi, UL)
        z8.next_to(zhi, UP, buff=0.8)
        # z8.move_to(UP*1)
        self.play(Write(zhi))
        self.wait(0.2)
        self.play(FadeIn(z1), run_time=0.1)
        self.play(FadeIn(z2), run_time=0.1)
        self.play(FadeIn(z3), run_time=0.1)
        self.play(FadeIn(z4), run_time=0.1)
        self.play(FadeIn(z5), run_time=0.1)
        self.play(FadeIn(z6), run_time=0.1)
        self.play(FadeIn(z7), run_time=0.1)
        self.play(FadeIn(z8), run_time=0.1)
        self.wait(3)

        sy = Text(text="\"shiyan\"", font="ITALIC", font_size=20, color=BLUE_A)
        sy1 = Text(text="实验", font="ITALIC", font_size=20, color=WHITE)
        sy2 = Text(text="食盐", font="ITALIC", font_size=20, color=WHITE)
        sy3 = Text(text="试验", font="ITALIC", font_size=20, color=WHITE)
        sy4 = Text(text="誓言", font="ITALIC", font_size=20, color=WHITE)
        sy5 = Text(text="饰演", font="ITALIC", font_size=20, color=WHITE)
        sy6 = Text(text="时延", font="ITALIC", font_size=20, color=WHITE)
        sy7 = Text(text="石岩", font="ITALIC", font_size=20, color=WHITE)
        sy8 = Text(text="...", font="ITALIC", font_size=20, color=WHITE)
        sy.next_to(zhi, RIGHT, buff=3)
        sy1.next_to(sy, UR)
        sy2.next_to(sy, RIGHT, buff=0.5)
        sy3.next_to(sy, DR)
        sy4.next_to(sy, DOWN, buff=0.5)
        sy5.next_to(sy, DL)
        sy6.next_to(sy, LEFT, buff=0.5)
        sy7.next_to(sy, UL)
        sy8.next_to(sy, UP, buff=0.8)
        self.play(Write(sy))
        self.wait(0.5)
        self.play(FadeIn(sy1), run_time=0.1)
        self.play(FadeIn(sy2), run_time=0.1)
        self.play(FadeIn(sy3), run_time=0.1)
        self.play(FadeIn(sy4), run_time=0.1)
        self.play(FadeIn(sy5), run_time=0.1)
        self.play(FadeIn(sy6), run_time=0.1)
        self.play(FadeIn(sy7), run_time=0.1)
        self.play(FadeIn(sy8), run_time=0.1)
        self.wait(5)

        c1 = Circle(radius=1.5)
        c1.set_fill(color=YELLOW, opacity=0.7)
        c1.next_to(z4, DOWN, buff=1.3)
        c1.to_edge(RIGHT, buff=4.5)
        c2 = Circle(radius=1)
        c2.set_fill(color=TEAL_A, opacity=0.8)
        c2.move_to(c1)
        c3 = Circle(radius=0.6)
        c3.set_fill(color=BLUE, opacity=0.6)
        c3.move_to(c2)

        e1 = Text(text="我是 你是 我不\n好的 看到 不行\n不要 几号 好点\n  ......", font="ITALIC", font_size=30,
                  color=BLUE)
        e1.shift(UP)
        e1.shift(RIGHT * 3)
        e2 = Text(text="我是 你是 我不\n好的 看到 不行\n不要 几号 好点\n  ......", font="ITALIC", font_size=5,
                  color=BLUE)
        e2.move_to(c1)

        self.play(FadeIn(c1))
        self.play(FadeIn(c2))
        self.play(FadeIn(c3))
        self.wait(4)
        self.play(Transform(e1, e2), run_time=0.5)
        self.wait(4)
        self.remove(poem, mark, zhi, z1, z2, z3, z4, z5, z6, z7, z8, c1, c2, c3, e1, e2,
                    sy, sy1, sy2, sy3, sy4, sy5, sy6, sy7, sy8)
        self.wait()

#结束部分，引出下一节
        s = Rectangle(height=5, width=3)
        s.set_fill(BLUE, opacity=1)
        s1 = Rectangle(height=2, width=3)
        s1.set_fill(BLUE, opacity=1)
        s2 = Rectangle(height=2, width=3)
        s2.set_fill(BLUE, opacity=1)
        s2.move_to(RIGHT * 10)
        s1.move_to(DOWN * 1)
        tj = Text(text="语言模型", font="ITALIC", font_size=20, color=WHITE)
        tj1 = Text(text="语言模型", font="ITALIC", font_size=20, color=WHITE)
        tj1.move_to(s1)
        tj2 = Text(text="语言模型", font="ITALIC", font_size=20, color=WHITE)
        tj2.move_to(s2)
        pin = Text(text="pinyin\nhanzi", font="ITALIC", font_size=40, color=WHITE)
        pin.to_edge(LEFT, buff=4)
        han = Text(text="拼音\n汉字", font="ITALIC", font_size=40, color=WHITE)
        han.to_edge(RIGHT, buff=4)
        self.wait(2.5)
        self.play(ShowCreation(s), Write(tj))
        self.wait(5)
        self.play(ReplacementTransform(s, s1), ReplacementTransform(tj, tj1))
        self.remove(s, tj)
        self.wait(1)
        self.play(Transform(s1, s2), Transform(tj1, tj2))
        self.remove(s1, tj1)
        self.wait(2)
        self.play(FadeIn(pin))
        self.play(Transform(pin, han))
        self.wait(3)
        self.remove(pin, han)
        self.wait()